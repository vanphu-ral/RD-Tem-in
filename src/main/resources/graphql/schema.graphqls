type Query {
    listRequestCreateTems: [ListRequestCreateTem]
    getProductOfRequestByRequestId(requestId: Int!): [ListProductOfRequest]
    infoTemDetails: [InfoTemDetail]
    infoTemDetailsByProductId(productId: Int!): [InfoTemDetail]
}
#mutation để gọi trong configuration
type Mutation {
    createProduct(input: CreateProductInput!): ListProductOfRequest!
    createProductsBatch(requestId: Int!, products: [CreateProductInput!]!): [ListProductOfRequest!]!
    createRequestAndProducts(input: CreateRequestWithProductsInput!): CreateRequestWithProductsResponse!
    generateTem(requestId: Int!): GenerateTemResponse!
    updateProductOfRequest(input: UpdateProductInput!): UpdateResponse!
    updateStorageUnitForRequest(requestId: Int!, storageUnit: String!): UpdateResponse!
}

input CreateProductInput {
    requestCreateTemId: Int
    sapCode: String!
    temQuantity: Int!
    partNumber: String!
    lot: String!
    initialQuantity: Int!
    vendor: String!
    userData1: String
    userData2: String
    userData3: String
    userData4: String
    userData5: String
    storageUnit: String
    expirationDate: String!
    manufacturingDate: String!
    arrivalDate: String!
}

input CreateRequestWithProductsInput {
    vendor: String!
    userData5: String!
    createdBy: String
    products: [CreateProductInput!]!
}

type CreateRequestWithProductsResponse {
    requestId: Int!
    products: [ListProductOfRequest!]!
    message: String
    generateTem(requestId: Int!): GenerateTemResponse!
    updateProductOfRequest(input: UpdateProductInput!): UpdateResponse!
    updateStorageUnitForRequest(requestId: Int!, storageUnit: String!): UpdateResponse!
}

# response generate tem in
type GenerateTemResponse {
    success: Boolean!
    message: String!
    totalTems: Int!
}

#khai báo bảng list request create tem
type ListRequestCreateTem {
    id: ID
    vendor: String
    userData5: String
    createdBy: String
    numberProduction: Int
    totalQuantity: Int
    status: String
    createdDate: String
}

#khai báo bảng list product of request
type ListProductOfRequest {
    id: ID
    requestCreateTemId: Int
    sapCode: String
    temQuantity: Int
    productName: String
    partNumber: String
    lot: String
    initialQuantity: Int
    vendor: String
    userData1: String
    userData2: String
    userData3: String
    userData4: String
    userData5: String
    storageUnit: String
    expirationDate: String
    manufacturingDate: String
    arrivalDate: String
    numberOfPrints: Int
}

#khai báo bảng info tem detail
type InfoTemDetail {
    id: ID
    productOfRequestId: Int
    reelId: String
    sapCode: String
    productName: String
    partNumber: String
    lot: String
    initialQuantity: Int
    vendor: String
    userData1: String
    userData2: String
    userData3: String
    userData4: String
    userData5: String
    storageUnit: String
    expirationDate: String
    manufacturingDate: String
    arrivalDate: String
    qrCode: String
    slTemQuantity: Int
}

#Response chỉnh sửa
type UpdateResponse {
    success: Boolean!
    message: String!
}

#đầu vào query chỉnh sửa
input UpdateProductInput {
    id: ID!
    sapCode: String
    partNumber: String
    requestCreateTemId: Int
    temQuantity: Int
    lot: String
    initialQuantity: Int
    vendor: String
    userData1: String
    userData2: String
    userData3: String
    userData4: String
    userData5: String
    storageUnit: String
    expirationDate: String
    manufacturingDate: String
    arrivalDate: String
    numberOfPrints: Int
}
